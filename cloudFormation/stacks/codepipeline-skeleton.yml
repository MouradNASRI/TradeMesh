AWSTemplateFormatVersion: '2010-09-09'
Description: Trading app - CodePipeline skeleton (Source -> Build -> CFN ChangeSet -> Execute)

Parameters:
  PipelineName:
    Type: String
    Default: trd-foundation-pipeline
  ArtifactBucketName:
    Type: String
    Description: Name of the artifacts bucket (from bootstrap stack)
  CodePipelineRoleArn:
    Type: String
    Description: Service role ARN for CodePipeline (from iam-roles stack)
  CloudFormationExecutionRoleArn:
    Type: String
    Description: Execution role ARN for CloudFormation actions (from iam-roles stack)
  # --- Source (CodeCommit) ---
  RepoName:
    Type: String
    Description: CodeCommit repository name
  BranchName:
    Type: String
    Default: main
  # --- Build (CodeBuild) ---
  CreateBuildProject:
    Type: String
    AllowedValues: ["true","false"]
    Default: "true"
  CodeBuildServiceRoleArn:
    Type: String
    Description: Service role ARN for CodeBuild (from iam-roles stack)
    Default: ""
  CodeBuildProjectName:
    Type: String
    Description: Use an existing CodeBuild project when CreateBuildProject=false
    Default: ""
  LogsGroupName:
    Type: String
    Default: /aws/codebuild/trd-pipeline-build
  # --- Deploy (CloudFormation) ---
  StackName:
    Type: String
    Default: trd-foundation-test
  TemplateFilePath:
    Type: String
    Default: app/app-template.yml
  ChangeSetName:
    Type: String
    Default: cs-foundation

Conditions:
  CreateBuildProjectCond: !Equals [!Ref CreateBuildProject, "true"]

Resources:
  # Optional CodeBuild project (created when CreateBuildProject=true)
  BuildLogs:
    Type: AWS::Logs::LogGroup
    Condition: CreateBuildProjectCond
    Properties:
      LogGroupName: !Ref LogsGroupName
      RetentionInDays: 14

  BuildProject:
    Type: AWS::CodeBuild::Project
    Condition: CreateBuildProjectCond
    Properties:
      Name: !Sub '${PipelineName}-build'
      ServiceRole: !Ref CodeBuildServiceRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        PrivilegedMode: false
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref LogsGroupName
          Status: ENABLED
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 20

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId: { Category: Source, Owner: AWS, Provider: CodeCommit, Version: '1' }
              Configuration:
                RepositoryName: !Ref RepoName
                BranchName: !Ref BranchName
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId: { Category: Build, Owner: AWS, Provider: CodeBuild, Version: '1' }
              Configuration:
                ProjectName: !If
                  - CreateBuildProjectCond
                  - !Ref BuildProject
                  - !Ref CodeBuildProjectName
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: CreateChangeSet
          Actions:
            - Name: CFNCreateChangeSet
              ActionTypeId: { Category: Deploy, Owner: AWS, Provider: CloudFormation, Version: '1' }
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref StackName
                ChangeSetName: !Ref ChangeSetName
                TemplatePath: !Sub 'BuildArtifact::${TemplateFilePath}'
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Ref CloudFormationExecutionRoleArn
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Approve
          Actions:
            - Name: ManualApproval
              ActionTypeId: { Category: Approval, Owner: AWS, Provider: Manual, Version: '1' }
              RunOrder: 1
        - Name: ExecuteChangeSet
          Actions:
            - Name: CFNExecuteChangeSet
              ActionTypeId: { Category: Deploy, Owner: AWS, Provider: CloudFormation, Version: '1' }
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref StackName
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !Ref CloudFormationExecutionRoleArn
              RunOrder: 1

Outputs:
  PipelineNameOut:
    Value: !Ref Pipeline
  BuildProjectNameOut:
    Condition: CreateBuildProjectCond
    Value: !Ref BuildProject
